version: '3.5'
services:
  postgres:
    image: 'postgres:latest'
    environment:
     POSTGRES_PASSWORD: postgres_password
  nginx:
    depends_on:
      - api
      - gaggle
    restart: always
    build:
      dockerfile: ./nginx/Dockerfile
      context: .
    ports:
      - '80:80'
#    networks:
#      - corp
#  api:
#    build:
#      dockerfile: ./apps/api/Dockerfile
#      context: .
#    volumes:
#      - /app/node_modules
#      - ./:/app
#    environment:
#      - PGUSER=postgres
#      - PGHOST=postgres
#      - PGDATABASE=postgres
#      - PGPASSWORD=postgres_password
#      - PGPORT=5432
#    ports:
#    - '4000:4000'
#    command: ['npm', 'run', 'start-api']
#  gaggle:
#    stdin_open: true
#    build:
#      dockerfile: ./apps/gaggle/Dockerfile
#      context: .
#    volumes:
#      - /app/node_modules
#      - ./:/app
#    ports:
#    - '4001:4001'
  api:
    container_name: api
    build:
      context: .
      cache_from:
        - my-base-image:nx-base
      dockerfile: ./apps/api/Dockerfile
      args:
        NODE_ENV: "development"
        BUILD_FLAG: ""
    image: api:nx-dev
    environment:
      NODE_ENV: "development"
      PORT: 4000
      PGUSER: postgres
      PGHOST: postgres
      PGDATABASE: postgres
      PGPASSWORD: postgrespassword
      PGPORT: 5432
#    networks:
#      - corp
    restart: on-failure
  gaggle:
    container_name: gaggle
    build:
      context: .
      cache_from:
        - nginx:1.19.2
      dockerfile: ./apps/gaggle/Dockerfile
      args:
        NODE_ENV: "development"
        BUILD_FLAG: ""
    environment:
      NODE_ENV: "development"
      PORT: 4900
#    networks:
#      - corp
    restart: on-failure
#networks:
#  corp:
#    driver: bridge
