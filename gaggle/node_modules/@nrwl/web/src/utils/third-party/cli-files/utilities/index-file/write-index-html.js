"use strict";
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeIndexHtml = void 0;
const tslib_1 = require("tslib");
const path_1 = require("path");
const package_chunk_sort_1 = require("../package-chunk-sort");
const strip_bom_1 = require("../strip-bom");
const augment_index_html_1 = require("./augment-index-html");
const fs_extra_1 = require("fs-extra");
function writeIndexHtml({ outputPath, indexPath, files = [], noModuleFiles = [], moduleFiles = [], baseHref, deployUrl, sri = false, scripts = [], styles = [], postTransform, crossOrigin, }) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        let content = fs_extra_1.readFileSync(indexPath).toString();
        content = strip_bom_1.stripBom(content);
        content = augment_index_html_1.augmentIndexHtml({
            input: outputPath,
            inputContent: content,
            baseHref,
            deployUrl,
            crossOrigin,
            sri,
            entrypoints: package_chunk_sort_1.generateEntryPoints({ scripts, styles }),
            files: filterAndMapBuildFiles(files, ['.js', '.css']),
            noModuleFiles: filterAndMapBuildFiles(noModuleFiles, '.js'),
            moduleFiles: filterAndMapBuildFiles(moduleFiles, '.js'),
            loadOutputFile: (filePath) => fs_extra_1.readFileSync(path_1.join(path_1.dirname(outputPath), filePath)).toString(),
        });
        if (postTransform) {
            content = yield postTransform(content);
        }
        fs_extra_1.writeFileSync(outputPath, content);
    });
}
exports.writeIndexHtml = writeIndexHtml;
function filterAndMapBuildFiles(files, extensionFilter) {
    const filteredFiles = [];
    const validExtensions = Array.isArray(extensionFilter)
        ? extensionFilter
        : [extensionFilter];
    for (const { file, name, extension, initial } of files) {
        if (name && initial && validExtensions.includes(extension)) {
            filteredFiles.push({ file, extension, name });
        }
    }
    return filteredFiles;
}
//# sourceMappingURL=write-index-html.js.map